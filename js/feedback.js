// –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫–æ –≤—Å–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (results-A0.html, results-B1+.html –∏ —Ç.–¥.)
// –û–Ω —Ç—Ä–µ–±—É–µ—Ç, —á—Ç–æ–±—ã TEST_DATA –±—ã–ª –¥–æ—Å—Ç—É–ø–µ–Ω.

/**
 * –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç ID —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫.
 */
function getPageTitle(pageId) {
    if (!pageId) return '&#8203;'; 
    const parts = pageId.split('-');
    // –î–µ–ª–∞–µ–º –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –∑–∞–≥–ª–∞–≤–Ω–æ–π
    let title = parts[0].charAt(0).toUpperCase() + parts[0].slice(1); 
    if (parts.length > 1) {
        // –ó–∞–º–µ–Ω—è–µ–º 'pt' –Ω–∞ 'Part '
        const partNumber = parts[1].replace('pt', 'Part ');
        title += `, ${partNumber}`;
    }
    return title;
}

// ‚≠êÔ∏è –ù–û–í–ê–Ø –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø (–¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞):
function getLevelDescription(level) {
    const descriptions = {
        'A0': 'Beginner',
        'A1‚Äì': 'Absolute Beginner',
        'A1+': 'Beginner',
        'A2‚Äì': 'Elementary',
        'A2+': 'Pre-Intermediate',
        'B1‚Äì': 'Intermediate',
        'B1+': 'Upper-Intermediate',
        'B2': 'Advanced',
        'C1': 'Proficiency'
    };
    return descriptions[level] || 'Level Unknown';
}

// --- –§–£–ù–ö–¶–ò–Ø –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –û–¢–ß–ï–¢–ê ---
function displayErrorReport() {
    // 1. –ò–∑–≤–ª–µ–∫–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ —Ñ–∏–¥–±–µ–∫–∞ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã level_calculator.js)
    const feedbackString = sessionStorage.getItem('reportFeedback');
    const feedbackDetails = JSON.parse(feedbackString) || [];
    
    // 2. –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Ç—á–µ—Ç–∞ (–æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≤–∞—à–µ–º HTML —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤)
    const reportContainer = document.getElementById('test-report');

    if (reportContainer) {
        let reportHTML = '';
        let errorNumber = 1; 
        
        if (feedbackDetails.length > 0) {
            // ‚≠êÔ∏è –ù–û–í–û–ï: –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è, –±—ã–ª–∞ –ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –æ—à–∏–±–∫–∞
            let hasActualErrors = false; 

            feedbackDetails.forEach(detail => {
                // ‚≠êÔ∏è –ù–û–í–û–ï –£–°–õ–û–í–ò–ï: –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –¥–ª—è TXT-–æ—Ç—á–µ—Ç–∞
                if (detail.isSkipped) {
                    return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç—É –∏—Ç–µ—Ä–∞—Ü–∏—é —Ü–∏–∫–ª–∞
                }
                
                // –ï—Å–ª–∏ –º—ã –¥–æ—à–ª–∏ —Å—é–¥–∞, –∑–Ω–∞—á–∏—Ç, —ç—Ç–æ —Ä–µ–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞, –∞ –Ω–µ –ø—Ä–æ–ø—É—Å–∫
                hasActualErrors = true; 

                const pageTitle = getPageTitle(detail.page);

                // ‚≠êÔ∏è –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï 1: –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –∑–∞–º–µ–Ω—ã <select> –Ω–∞ '...'
                // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç –≤–µ—Å—å –±–ª–æ–∫ <select> –∏ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ.
                const cleanedQuote = detail.taskQuote.replace(/<\s*select[^>]*>[\s\S]*?<\s*\/select\s*>/gi, '...');

                
                // –ì–ï–ù–ï–†–ê–¶–ò–Ø HTML-–±–ª–æ–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –æ—à–∏–±–∫–∏
                reportHTML += `
                    <h3 class="panel-title">Wrong answer #<span class="wrong-answer-number">${errorNumber++}</span></h3>
                    <p class="sub-title">${pageTitle}</p>

                    <div class="report-quote">
                        <p class="task-quote">${cleanedQuote}</p>
                        <p class="answer-quote">&#8203;<span class="user-answer">${detail.userAnswer}</span></p>
                        <p class="answer-quote">&#8203;<span class="correct-answer">${detail.correctAnswer}</span></p>
                    </div>

                    <p class="topic">${detail.topic}</p>
                `;
            });
            
            // 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ –Ω–µ –ø—É—Å—Ç
            if (hasActualErrors) {
                 // –ï—Å–ª–∏ –±—ã–ª–∏ –æ—à–∏–±–∫–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö
                 reportContainer.innerHTML = reportHTML; 
            } else {
                 // –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –Ω–µ –ø—É—Å—Ç, –Ω–æ hasActualErrors=false, –∑–Ω–∞—á–∏—Ç, –±—ã–ª–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–ø—É—Å–∫–∏
                 reportContainer.innerHTML = `
                    <h3 class="panel-title">Hmm... Looks like you skipped the whole test. ü§®</h3>
                 `;
            }

        } else {
            // 2. –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ feedbackDetails –ø—É—Å—Ç (–Ω–µ—Ç –Ω–∏ –æ—à–∏–±–æ–∫, –Ω–∏ –ø—Ä–æ–ø—É—Å–∫–æ–≤)
            reportContainer.innerHTML = `
                <h3 class="panel-title">No wrong answers! You're amazing! üéâ</h3>
            `;
        }
    }

    // ‚≠êÔ∏è –í–°–¢–ê–í–ò–¢–¨: –ü—Ä–∏–≤—è–∑–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª—è –∫ –∫–Ω–æ–ø–∫–µ –¥–ª—è –°–ö–ê–ß–ò–í–ê–ù–ò–Ø –§–ê–ô–õ–ê
    // –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é 'feedbackDetails', –∫–æ—Ç–æ—Ä–∞—è –±—ã–ª–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –≤ –Ω–∞—á–∞–ª–µ 'displayErrorReport'
    const saveButton = document.getElementById('save-report-button');
    if (saveButton) {
        saveButton.addEventListener('click', () => {
            
            // 1. –ò–∑–≤–ª–µ–∫–∞–µ–º –ü–û–õ–ù–´–ô –û–¢–ß–ï–¢ –ò–ó –ù–û–í–û–ì–û –ö–õ–Æ–ß–ê
            const fullReportString = sessionStorage.getItem('fullReportDataForTXT');
            const fullReportData = JSON.parse(fullReportString) || {};
            
            const finalLevel = fullReportData.finalLevel || 'N/A';
            const levelStats = fullReportData.levelStats || {};
            const detailsForFile = fullReportData.feedbackDetails || []; // –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫ –∏ –ø—Ä–æ–ø—É—Å–∫–æ–≤
            
            let reportContent = '';
            let errorNumber = 1;

            // --- A) –°–µ–∫—Ü–∏—è –£–†–û–í–ù–Ø ---
            reportContent += `\n======================\n`;
            reportContent += `RESULT: ${finalLevel}`;
            reportContent += `\n======================\n`;
            
            // --- B) –°–µ–∫—Ü–∏—è –°–¢–ê–¢–ò–°–¢–ò–ö–ò ---
            reportContent += `% OF CORRECT ANSWERS:\n`;
            const statsArray = Object.keys(levelStats).map(level => {
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º ‚âà –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤–∞—à–µ–º—É –ø—Ä–∏–º–µ—Ä—É
                return `${level} ‚âà ${levelStats[level]}%`; 
            });
            reportContent += statsArray.join('; ') + '\n';
            reportContent += `======================\n`;
            
            // --- C) –°–µ–∫—Ü–∏—è –°–ü–ò–°–ö–ê –í–û–ü–†–û–°–û–í ---
            reportContent += `WRONG AND SKIPPED ANSWERS:\n`;

            if (detailsForFile.length > 0) {
                detailsForFile.forEach(detail => {
                    const pageTitle = getPageTitle(detail.page);
                    
                    if (detail.isSkipped) {
                        // –°–ö–ò–ü–ù–£–¢–´–ô –û–¢–í–ï–¢: Reading, Part 1, gap 1 ‚Äî skipped ‚è≠
                        const questionNumber = detail.name.split('_').pop(); 
                        reportContent += `${pageTitle}, gap ${questionNumber} ‚Äî S ‚è≠\n`; 
                    } else {
                        // –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô –û–¢–í–ï–¢: Grammar Test, q19
                        // –ò—Å–ø–æ–ª—å–∑—É–µ–º question.name, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤–æ–ø—Ä–æ—Å–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä 'q19'
                        reportContent += `${pageTitle}, ${detail.name.split('_').pop()}\n`;
                        reportContent += `ANSW: ${detail.userAnswer} ‚Äî W ‚ùå\n`;
                    }
                    
                    reportContent += "----------------------------------\n";
                });
            } else {
                 reportContent += "No wrong or skipped answers! Perfect score! üéâ\n";
                 reportContent += "----------------------------------\n";
            }
            reportContent += "---------- END OF LIST ----------\n";


            // 3. –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
            const blob = new Blob([reportContent], { type: 'text/plain;charset=utf-8' });
            const url = URL.createObjectURL(blob);
            
            const link = document.createElement('a');
            link.href = url;
            link.download = `Russian_Test_Report_${finalLevel}.txt`; 
            
            // –ò–º–∏—Ç–∏—Ä—É–µ–º –∫–ª–∏–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            document.body.appendChild(link);
            link.click(); 
            document.body.removeChild(link);
            
            // –û—á–∏—â–∞–µ–º –æ–±—ä–µ–∫—Ç URL –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
            URL.revokeObjectURL(url); 
        });
    }
    // ----------------------------------------

    // 3. –û–ß–ò–°–¢–ö–ê –•–†–ê–ù–ò–õ–ò–©–ê (–í–ê–ñ–ù–û!)
    // –û—Ç—á–µ—Ç –ø–æ–∫–∞–∑–∞–Ω, —Ç–µ–ø–µ—Ä—å —É–¥–∞–ª—è–µ–º –µ–≥–æ, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –ø–æ—è–≤–∏–ª—Å—è –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º —Å–ª—É—á–∞–π–Ω–æ–º –∑–∞—Ö–æ–¥–µ.
    sessionStorage.removeItem('reportFeedback');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', displayErrorReport);